{"version":3,"sources":["components/NavigationBar.js","components/PageNotFound.js","components/pizzas/PizzaCard.js","redux/actions/pizzaActions.js","redux/actions/actionTypes.js","api/pizzasApi.js","components/pizzas/PizzasPage.js","components/cart/CartList.js","components/common/TextInput.js","components/cart/PizzaOrderForm.js","components/cart/CartPage.js","components/contactus/ContactUsPage.js","App.js","redux/reducers/initialState.js","redux/reducers/pizzaReducer.js","redux/reducers/rootReducer.js","index.js","redux/configureStore.js","redux/localStorage.js"],"names":["NavigationBar","Navbar","bg","variant","Nav","className","Link","href","src","height","alt","Button","PageNotFound","state","Component","PizzaCard","props","Card","key","pizza","id","style","margin","Img","image","width","padding","Body","Title","name","Text","description","onClick","addPizza","removePizza","type","resetPizzas","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","PizzasPage","catalog_pizzas","actions","formatTotal","pizzas","reduce","total","currentPizza","price","isOrderPizzasDisabled","length","log","fetch","baseUrl","then","catch","setState","display","flexDirection","this","map","disabled","React","connectedStateAndProps","connect","dispatch","bindActionCreators","pizzaActions","CartList","Table","striped","bordered","hover","TextInput","wrapperClass","htmlFor","label","onChange","value","defaultProps","PizzaOrderForm","onSubmit","order","full_name","address","payment","fullName","isSaveDisabled","onReset","useState","setOrder","event","target","preventDefault","JSON","stringify","history","push","ContactUsPage","Jumbotron","rounded","App","path","exact","component","CartPage","initialState","pizzaReducer","action","nextId","Math","max","apply","o","newPizza","newState","pizzaIndex","findIndex","splice","rootReducer","combineReducers","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","serializedState","localStorage","getItem","parse","err","loadStateFromLocalStorage","createStore","applyMiddleware","reduxImmutableStateInvariant","subscribe","setItem","saveStateToLocalStorage","getState","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e617e9f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction NavigationBar() {\r\n  // {\" \"} is a extra space in navigation bar because we are in multiple rows\r\n  return (\r\n    <Navbar bg=\"primary\" variant=\"dark\">\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/pizzas\">Pizzas</Nav.Link>\r\n        <Nav.Link href=\"/cart\">\r\n          <img src=\"/images/online_cart_empty.png\" height=\"50\" alt=\"cart\" />\r\n        </Nav.Link>\r\n        <Nav.Link href=\"/contact\">Contact Us</Nav.Link>\r\n      </Nav>\r\n      <Button variant=\"outline-info\">Sign in</Button>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PageNotFound extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h2>Page not found</h2>;\r\n  }\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction PizzaCard(props) {\r\n  return (\r\n    <Card key={props.pizza.id} style={{ margin: \"10px\" }}>\r\n      <Card.Img\r\n        variant=\"top\"\r\n        src={props.pizza.image}\r\n        style={{ height: \"250px\", width: \"300px\", padding: \"10px\" }}\r\n      />\r\n      <Card.Body>\r\n        <Card.Title>{props.pizza.name}</Card.Title>\r\n        <Card.Text>{props.pizza.description}</Card.Text>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => props.addPizza(props.pizza)}\r\n          style={{ margin: \"10px\" }}\r\n        >\r\n          Add\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => props.removePizza(props.pizza)}\r\n          style={{ margin: \"10px\" }}\r\n        >\r\n          Remove\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// import Badge from \"react-bootstrap/Badge\";\r\n// <Badge variant=\"secondary\">5</Badge>\r\n\r\nexport default PizzaCard;\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\n// This is action creator\r\n// It creates and action which is an object with a type and payload\r\n// can do Objet shorthand syntax return { type: \"CREATE_COURSE\", course};\r\nexport function addPizza(pizza) {\r\n  //debugger;\r\n  return { type: actionTypes.ADD_PIZZA, pizza: pizza };\r\n}\r\n\r\nexport function removePizza(pizza) {\r\n  //debugger;\r\n  return { type: actionTypes.REMOVE_PIZZA, pizza: pizza };\r\n}\r\n\r\nexport function resetPizzas() {\r\n  //debugger;\r\n  return { type: actionTypes.RESET_PIZZAS };\r\n}\r\n","export const ADD_PIZZA = \"ADD_PIZZA\";\r\nexport const REMOVE_PIZZA = \"REMOVE_PIZZA\";\r\nexport const RESET_PIZZAS = \"RESET_PIZZAS\";\r\n","const baseUrl = \"http://localhost:3001/pizzas\";\r\n\r\nasync function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nfunction handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n\r\nexport function getAllPizzas() {\r\n  console.log(\"getAllPizzas api/all_pizzas\");\r\n  const allPizzasUrl = baseUrl + \"/api/all_pizzas\";\r\n  //   return fetch(allPizzasUrl).then((response) => response.json());\r\n  return fetch(allPizzasUrl).then(handleResponse).catch(handleError);\r\n}\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PizzaCard from \"./PizzaCard\";\r\nimport { connect } from \"react-redux\";\r\nimport * as pizzaActions from \"../../redux/actions/pizzaActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getAllPizzas } from \"../../api/pizzasApi\";\r\n// import { allPizzas } from \"../../redux/pizzaTypes\";\r\n\r\nclass PizzasPage extends React.Component {\r\n  state = {\r\n    catalog_pizzas: [],\r\n  };\r\n\r\n  addPizza = (pizza) => {\r\n    this.props.actions.addPizza(pizza);\r\n  };\r\n\r\n  removePizza = (pizza) => {\r\n    this.props.actions.removePizza(pizza);\r\n  };\r\n\r\n  formatTotal = () => {\r\n    let pizzas = [...this.props.pizzas];\r\n    let result = pizzas.reduce(\r\n      (total, currentPizza) => (total = total + currentPizza.price),\r\n      0\r\n    );\r\n    return result;\r\n  };\r\n\r\n  isOrderPizzasDisabled = () => {\r\n    return this.props.pizzas.length === 0;\r\n  };\r\n\r\n  componentDidMount() {\r\n    getAllPizzas().then((pizzas) => {\r\n      console.log(pizzas.length);\r\n      this.setState({ catalog_pizzas: pizzas });\r\n    });\r\n    // this.setState({ catalog_pizzas: allPizzas });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Pizzas</h1>\r\n        <hr />\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          {this.state.catalog_pizzas.map((pizza) => {\r\n            return (\r\n              <div key={pizza.id}>\r\n                <PizzaCard\r\n                  pizza={pizza}\r\n                  addPizza={this.addPizza}\r\n                  removePizza={this.removePizza}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <br />\r\n        <Button\r\n          href=\"/cart\"\r\n          variant=\"success\"\r\n          style={{ margin: \"10px\" }}\r\n          disabled={this.isOrderPizzasDisabled()}\r\n        >\r\n          Order pizza\r\n        </Button>\r\n        <span>Total {this.formatTotal()}$</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPizzasPage.propTypes = {\r\n  pizzas: PropTypes.array.isRequired,\r\n  actions: PropTypes.object.isRequired,\r\n};\r\n\r\n// After reducer updates store we expect this method to be called\r\nfunction mapStateToProps(state) {\r\n  //debugger;\r\n  // can be also author_list or authorReducer I didn't understand yet\r\n  return {\r\n    // pizzas is in the this.props\r\n    // state.pizzas are actually the store's state\r\n    pizzas: state.pizzas,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(pizzaActions, dispatch),\r\n  };\r\n}\r\n\r\n// connect function connects components to redux. These are container components\r\nconst connectedStateAndProps = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connectedStateAndProps(PizzasPage);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\n// Presentation component with presentation concern\r\n// map is a function which returns new array\r\n// iterating an array need key to keep track - set key to id to the table list\r\nfunction CartList(props) {\r\n  return (\r\n    <>\r\n      <h3>List of pizzas</h3>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Pizza</th>\r\n            <th>Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.pizzas.map((pizza) => {\r\n            return (\r\n              <tr key={pizza.id}>\r\n                <th>{pizza.name}</th>\r\n                <th>{pizza.price}</th>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nCartList.propTypes = {\r\n  pizzas: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default CartList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TextInput(props) {\r\n  let wrapperClass = \"form-group\";\r\n  if (props.error.length > 0) {\r\n    wrapperClass += \" has-error\";\r\n  }\r\n\r\n  return (\r\n    <div className={wrapperClass}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <div className=\"field\">\r\n        <input\r\n          id={props.id}\r\n          type=\"text\"\r\n          onChange={props.onChange}\r\n          name={props.name}\r\n          className=\"form-control\"\r\n          value={props.value}\r\n        />\r\n      </div>\r\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  error: \"\",\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport TextInput from \"../common/TextInput\";\r\n\r\nfunction PizzaOrderForm(props) {\r\n  function isSaveDisabled() {\r\n    let fullName = props.order.full_name;\r\n    let address = props.order.address;\r\n    return fullName.length === 0 || address.length === 0;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <TextInput\r\n        id=\"full_name\"\r\n        label=\"Full name\"\r\n        onChange={props.onChange}\r\n        name=\"full_name\"\r\n        value={props.order.full_name}\r\n      />\r\n\r\n      <TextInput\r\n        id=\"address\"\r\n        label=\"Address\"\r\n        onChange={props.onChange}\r\n        name=\"address\"\r\n        value={props.order.address}\r\n      />\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"payment\">Payment</label>\r\n        <div className=\"field\">\r\n          <select\r\n            id=\"payment\"\r\n            name=\"payment\"\r\n            onChange={props.onChange}\r\n            value={props.order.payment || \"\"}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"\" />\r\n            <option value=\"1\">On phone</option>\r\n            <option value=\"2\">On delivery</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Order\"\r\n        className=\"btn btn-lg btn-success\"\r\n        disabled={isSaveDisabled()}\r\n      />\r\n\r\n      <Button\r\n        variant=\"danger btn-lg\"\r\n        style={{ margin: \"10px\" }}\r\n        onClick={props.onReset}\r\n      >\r\n        Reset\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nPizzaOrderForm.propTypes = {\r\n  order: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onReset: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PizzaOrderForm;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as pizzaActions from \"../../redux/actions/pizzaActions\";\r\nimport CartList from \"./CartList\";\r\nimport PizzaOrderForm from \"./PizzaOrderForm\";\r\n\r\nfunction CartPage(props) {\r\n  const [order, setOrder] = useState({\r\n    full_name: \"\",\r\n    address: \"\",\r\n    payment: 1,\r\n  });\r\n\r\n  function resetPizzas() {\r\n    props.actions.resetPizzas();\r\n  }\r\n\r\n  function handleChange(event) {\r\n    setOrder({\r\n      ...order,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    // Send to server\r\n    // courseApi.saveCourse(course).then(() => {\r\n    //   props.history.push(\"/courses\");\r\n    // });\r\n    console.log(\"Issue order: \" + JSON.stringify(order));\r\n    props.actions.resetPizzas();\r\n    props.history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: \"400px\" }}>\r\n      <h1>Cart</h1>\r\n      <hr />\r\n      <PizzaOrderForm\r\n        order={order}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n        onReset={resetPizzas}\r\n      />\r\n      <br />\r\n      <hr />\r\n      <CartList pizzas={props.pizzas} />\r\n    </div>\r\n  );\r\n}\r\n\r\nCartPage.propTypes = {\r\n  pizzas: PropTypes.array.isRequired,\r\n  actions: PropTypes.object.isRequired,\r\n};\r\n\r\n// After reducer updates store we expect method to be called\r\nfunction mapStateToProps(state) {\r\n  //debugger;\r\n  // can be also author_list or authorReducer I didn't understand yet\r\n  return {\r\n    // pizzas is in the props\r\n    // state.pizzas are actually the store's state\r\n    pizzas: state.pizzas,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(pizzaActions, dispatch),\r\n  };\r\n}\r\n\r\n// connect function connects components to redux. These are container components\r\nconst connectedStateAndProps = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connectedStateAndProps(CartPage);\r\n","import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\n// <Link className=\"btn btn-primary\" to=\"/pizzas\">\r\n//   {\" \"}\r\n//   Add course{\" \"}\r\n// </Link>;\r\n\r\nconst ContactUsPage = () => (\r\n  <div>\r\n    <Jumbotron>\r\n      <h1>Pizza place</h1>\r\n      <img\r\n        src=\"/images/pizza-place.jpg\"\r\n        alt=\"place\"\r\n        rounded=\"true\"\r\n        style={{ height: \"250px\" }}\r\n      />\r\n      <p>\r\n        We are always happy to serve you pizza <br></br>\r\n        Better order from the web\r\n      </p>\r\n      <p>\r\n        <Button href=\"/pizzas\" variant=\"primary\">\r\n          Order pizza\r\n        </Button>\r\n      </p>\r\n    </Jumbotron>\r\n  </div>\r\n);\r\n\r\nexport default ContactUsPage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport PageNotFound from \"./components/PageNotFound\";\r\nimport PizzasPage from \"./components/pizzas/PizzasPage\";\r\nimport CartPage from \"./components/cart/CartPage\";\r\nimport ContactUsPage from \"./components/contactus/ContactUsPage\";\r\n\r\nfunction App() {\r\n  // Route takes 2 props : the path which declares the URL and the component to load when path url matches\r\n  // the exact is very important because otherwise / will be in all (/, /about and /courses)\r\n\r\n  // container is bootstrap component\r\n  // When you give Container in div class the frame size will be fixed for all screen.\r\n  // and if you give container_fluid in div class frame size will take the size of screen pannel\r\n  // container is white background with sharp corners\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <NavigationBar />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={PizzasPage} />\r\n        <Route path=\"/pizzas\" exact component={PizzasPage} />\r\n        <Route path=\"/cart\" component={CartPage} />\r\n        <Route path=\"/contact\" component={ContactUsPage} />\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Export in the class enables other places to import the class\r\n// The default enables importing\r\nexport default App;\r\n","// This is the convension. You can also see in https://youtu.be/apcda524MJA?t=238\r\nconst initialState = {\r\n  pizzas: [],\r\n};\r\n\r\nexport default initialState;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\n// reducer slices the store\r\n// = initState is the default if undefined\r\nfunction pizzaReducer(state = initialState.pizzas, action) {\r\n  //debugger;\r\n  switch (action.type) {\r\n    case actionTypes.ADD_PIZZA: {\r\n      // ... spread operator\r\n      let nextId = 1;\r\n      if (state.length > 0) {\r\n        nextId =\r\n          Math.max.apply(\r\n            Math,\r\n            state.map(function (o) {\r\n              return o.id;\r\n            })\r\n          ) + 1;\r\n      }\r\n\r\n      let newPizza = { ...action.pizza, id: nextId };\r\n      let newState = [...state, newPizza];\r\n      // consoleLogPizzas(newState);\r\n      // return updated copy of state to the store. Whatever return from reducer becomes new state for this reducer\r\n      return newState;\r\n    }\r\n    case actionTypes.REMOVE_PIZZA: {\r\n      let newState = [...state];\r\n      // return found idex or -1 if not found\r\n      // Array.prototype.indexOf() expects a value as first parameter. This makes it a good choice to find the index in arrays of primitive types (like string, number, or boolean).\r\n      // Array.prototype.findIndex() expects a callback as first parameter. Use this if you need the index in arrays with non-primitive types (e.g. objects) or your find condition is more complex than just a value.\r\n      var pizzaIndex = newState.findIndex(\r\n        (currentPizza) => currentPizza.name === action.pizza.name\r\n      );\r\n      // console.log(\"pizzaIndex \" + pizzaIndex);\r\n      // remove starting from pizzaIndex 1 item\r\n      if (pizzaIndex >= 0) {\r\n        newState.splice(pizzaIndex, 1);\r\n      }\r\n      // consoleLogPizzas(newState);\r\n      // return updated copy of state to the store. Whatever return from reducer becomes new state for this reducer\r\n      return newState;\r\n    }\r\n    case actionTypes.RESET_PIZZAS: {\r\n      let newState = [];\r\n      // consoleLogPizzas(newState);\r\n      // return updated copy of state to the store. Whatever return from reducer becomes new state for this reducer\r\n      return newState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// function consoleLogPizzas(logPizzas) {\r\n//   console.log(JSON.stringify(newState));\r\n//   console.log(\"Pizzas: \" + logPizzas.length);\r\n//   logPizzas.map((pizza) => {\r\n//     console.log(\r\n//       \"Pizza: \" +\r\n//         pizza.id +\r\n//         \" \" +\r\n//         pizza.name +\r\n//         \" \" +\r\n//         pizza.description +\r\n//         \" \" +\r\n//         pizza.price\r\n//     );\r\n//     return 0;\r\n//   });\r\n// }\r\n\r\nexport default pizzaReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport pizzas from \"./pizzaReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  // this is how we will contact the reducer so we may rename to courses\r\n  pizzas: pizzas,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport configureStore from \"./redux/configureStore\";\r\nimport { Provider as ReductProvider } from \"react-redux\";\r\n\r\n// This can be a good place to initial store with data\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <ReductProvider store={store}>\r\n    <Router>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </Router>\r\n  </ReductProvider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport {\r\n  loadStateFromLocalStorage,\r\n  saveStateToLocalStorage,\r\n} from \"./localStorage\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\n\r\n// We configure our store and set up for the browser debug\r\nexport default function configureStore(initialState) {\r\n  // add support for redux dev tools in the browser\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const persistedState = loadStateFromLocalStorage();\r\n\r\n  // reduxImmutableStateInvariant will warn us on state changes\r\n  let store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    //initialState,\r\n    composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\r\n  );\r\n\r\n  // register to local storage in case someone is doing refresh F5 or moving beteern tabs\r\n  store.subscribe(() => saveStateToLocalStorage(store.getState()));\r\n\r\n  return store;\r\n}\r\n","export const loadStateFromLocalStorage = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveStateToLocalStorage = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n"],"sourceRoot":""}